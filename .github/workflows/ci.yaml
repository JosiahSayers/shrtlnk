name: CI Checks
on:
  pull_request:
    branches: [ main ]
jobs:
  CI:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      NODE_ENV: testing
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/shrtlnk
      PORT: 3000
      API_KEY: shrtlnk-test-api-key
      SESSION_SECRET: super-secure-secret
      SENDGRID_API_KEY: SG.testing
      BASE_URL: http://localhost:3000
      SAFE_BROWSING_API_KEY: ${{ secrets.SAFE_BROWSING_API_KEY }}
      TZ: America/New_York

    steps:
    - name: Setup - Checkout
      uses: actions/checkout@v2

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - run: npm i

    - run: npm run build

    - name: DB container
      run: docker-compose -f docker-compose.ci.yml up -d --build --remove-orphans --force-recreate

    - name: "Lint"
      run: npm run lint

    - name: "Unit Tests"
      run: npm run test

    - name: Migrate database
      run: npm run db:migrate

    - name: Seed database
      run: npm run db:seed

    - name: Integration Tests
      uses: cypress-io/github-action@v4
      with:
        browser: chrome
        record: true
        start: npm run dev
        wait-on: 'http://localhost:3000/health'
      env:
        CYPRESS_BASE_URL: http://localhost:3000
        # pass the Dashboard record key as an environment variable
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        # pass GitHub token to allow accurately detecting a build vs a re-run build
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Stop containers
      if: always()
      run: docker-compose -f docker-compose.ci.yml down

    - name: Docker Prune
      if: always()
      run: docker system prune -f
