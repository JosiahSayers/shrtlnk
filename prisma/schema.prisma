generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id          String       @id @default(uuid())
  name        String
  website     String?
  apiKey      String       @unique
  status      String       @default("Valid")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userId      String
  User        User         @relation(fields: [userId], references: [id])
  shrtlnks    Shrtlnk[]
  blockedUrls BlockedUrl[]

  @@unique(fields: [id, userId], name: "idAndUserId")
}

model Shrtlnk {
  id            String        @id @default(uuid())
  key           String        @unique
  url           String
  createdAt     DateTime      @default(now())
  applicationId String?
  application   Application?  @relation(fields: [applicationId], references: [id], onDelete: SetNull)
  loads         ShrtlnkLoad[]
}

model ShrtlnkLoad {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  shrtlnkId String
  shrtlnk   Shrtlnk  @relation(fields: [shrtlnkId], references: [id], onDelete: Cascade)
}

model BlockedUrl {
  id            String      @id @default(uuid())
  url           String?
  createdAt     DateTime    @default(now())
  applicationId String
  application   Application @relation(fields: [applicationId], references: [id])
}

model User {
  id               String        @id @default(uuid())
  email            String        @unique
  firstName        String
  lastName         String
  password         String
  dotnetPassword   String?
  dotnetSaltArray  String?
  createdAt        DateTime      @default(now())
  lastLoginSuccess DateTime      @default(now())
  lastLoginAttempt DateTime      @default(now())
  role             String
  verified         Boolean
  applications     Application[]
}
