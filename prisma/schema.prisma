generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id          Int          @id @default(autoincrement())
  name        String
  website     String?
  apiKey      String       @unique
  status      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userId      Int
  User        User         @relation(fields: [userId], references: [id])
  shrtlnks    Shrtlnk[]
  blockedUrls BlockedUrl[]
}

model Shrtlnk {
  id            Int           @id @default(autoincrement())
  key           String        @unique
  url           String
  createdAt     DateTime      @default(now())
  applicationId Int
  application   Application   @relation(fields: [applicationId], references: [id])
  loads         ShrtlnkLoad[]
}

model ShrtlnkLoad {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  shrtlnkId Int
  shrtlnk   Shrtlnk  @relation(fields: [shrtlnkId], references: [id])
}

model BlockedUrl {
  id            Int         @id @default(autoincrement())
  url           String?
  createdAt     DateTime    @default(now())
  applicationId Int
  application   Application @relation(fields: [applicationId], references: [id])
}

model User {
  id               Int           @id @default(autoincrement())
  email            String        @unique
  firstName        String
  lastName         String
  password         String
  dotnetPassword   String?
  dotnetSaltArray  String?
  createdAt        DateTime      @default(now())
  lastLoginSuccess DateTime      @default(now())
  lastLoginAttempt DateTime      @default(now())
  role             String
  verified         Boolean
  applications     Application[]
}
